// Generated by CoffeeScript 1.6.2
define(['jquery', 'index', 'holder', 'jquery.migrate', 'blockUI', 'fancybox', 'fileupload', 'form', 'jquery.jcrop'], function($, Index, Holder) {
  Index = Index || {};
  Index.Admin = (function(Admin) {
    Admin.manage = (function() {
      var bindEvents, confirmDelete, getForm, remove, __FileUploadHiddden, __addButton, __cancelCropButton, __cropForm, __cropImage, __cropModal, __deleteButton, __editButton, __fancyboxImage, __fileUploadButton, __fileUploadForm, __fileUploadInput, __fileUploadThumbnail, __formElement, __formModal, __itemClass, __itemCurrent, __publishButtom, __saveButton, __saveCropButton, _bindCropEvents, _hideProgressBar, _showProgressBar, _showThumbnail, _triggerAjaxForm, _triggerCropForm, _triggerFileUpload, _updateCropCoords;

      __formModal = '';
      __formElement = 'form.modal-form';
      __itemClass = '.item';
      __fancyboxImage = '.image-fancybox';
      __addButton = '.btn-add';
      __editButton = '.btn-edit';
      __deleteButton = '.btn-remove';
      __saveButton = '.btn-save-widget';
      __publishButtom = '.btn-generate';
      __fileUploadForm = '#fileupload-form';
      __fileUploadInput = '#fileupload-input';
      __fileUploadButton = '.fileinput-button';
      __fileUploadThumbnail = '.fileupload-thumbnail';
      __FileUploadHiddden = '.fileupload-hidden';
      __itemCurrent = '';
      __cropModal = '';
      __saveCropButton = '.btn-save-crop';
      __cancelCropButton = '.btn-cancel-crop';
      __cropForm = 'form.crop-form';
      __cropImage = 'img.jcrop-image';
      getForm = function(target, action) {
        return $.ajax({
          beforeSend: function() {
            return Index.uiBlocker();
          },
          url: target.attr('href'),
          type: 'GET',
          dataType: 'html'
        }).done(function(data) {
          var image, modal;

          if (data === 'undefined' || data === '') {
            return false;
          }
          modal = $(Index.modals.widgetForm);
          $(modal).find('#modalBody').html(data);
          $(modal).find('#modalLabel').html(action === 'add' ? 'Novo' : 'Editar');
          $(modal).modal();
          __formModal = modal;
          $(__formModal).on('hidden', function() {
            return $(this).remove('.modal');
          });
          image = $(__formModal).find(__fileUploadThumbnail);
          if (image.length > 0 && image.attr('src') === void 0) {
            Holder.run({
              images: $(__formModal).find(__fileUploadThumbnail)[0]
            });
          }
          _triggerFileUpload();
          return _triggerAjaxForm();
        }).always(function() {
          return Index.uiBlocker();
        });
      };
      _triggerAjaxForm = function() {
        return $(__formModal).find(__formElement).ajaxForm({
          beforeSubmit: function() {
            return Index.uiBlocker();
          },
          success: function(data) {
            Index.uiBlocker();
            $(__formModal).modal('hide');
            return setTimeout(function() {
              return window.location.href = document.URL;
            }, 1000);
          },
          error: function() {
            return Index.uiBlocker();
          }
        });
      };
      _triggerFileUpload = function() {
        $(__formModal).find(__fileUploadButton).bind('click', function() {
          $(__formModal).find(__fileUploadInput).click();
          return __itemCurrent = $(this).parents(__itemClass);
        });
        return $(__formModal).find(__fileUploadForm).fileupload({
          dataType: 'json',
          add: function(e, data) {
            return data.submit();
          },
          progressall: function(e, data) {
            var progress, progressBar;

            progressBar = _showProgressBar();
            progress = parseInt(data.loaded / data.total * 100, 10);
            if (progressBar !== false) {
              return $(progressBar).children('.bar').css('width', progress + '%');
            }
          },
          done: function(e, data) {
            _hideProgressBar();
            return _triggerCropForm(data.result);
          }
        });
      };
      _showProgressBar = function() {
        var progressBar;

        progressBar = $(__itemCurrent).find('.progress');
        if (progressBar.length === 0) {
          return false;
        }
        $(progressBar).removeClass('fade');
        return progressBar;
      };
      _hideProgressBar = function() {
        var progressBar;

        progressBar = $(__itemCurrent).find('.progress');
        if (progressBar.length > 0) {
          return $(progressBar).addClass('fade');
        }
      };
      _triggerCropForm = function(data) {
        var modal;

        if (!(data instanceof Object)) {
          return false;
        }
        if (data.success === false) {
          return Index.modals.showAlert(data.message);
        }
        modal = $(Index.modals.widgetCrop);
        $('#modalBody', modal).html(data.form);
        $('#modalLabel', modal).html('Crop');
        __cropModal = modal;
        $(__cropModal).find('.max_height').val(max_height);
        $(__cropModal).find('.max_width').val(max_width);
        $(__cropModal).find(__cropImage).Jcrop({
          onChange: _updateCropCoords,
          onSelect: _updateCropCoords,
          aspectRatio: max_width / max_height,
          minSize: [min_width, min_height],
          setSelect: [0, 0, min_width, min_height]
        }, function() {
          $(__cropModal).modal();
          return $(__cropModal).on('hidden', function() {
            return $(this).remove('.modal');
          });
        });
        _showThumbnail(data.url);
        _bindCropEvents();
        return $(__cropModal).find(__cropForm).ajaxForm({
          beforeSubmit: function() {
            return Index.uiBlocker();
          },
          success: function(data) {
            Index.uiBlocker();
            if (!(data instanceof Object)) {
              return false;
            }
            if (data.success === false) {
              return Index.modals.showAlert(data.message);
            }
            $(__cropModal).modal('hide');
            _showThumbnail(data.image);
            return $(__itemCurrent).find(__FileUploadHiddden).val(data.url);
          },
          error: function() {
            return $.unblockUI();
          }
        });
      };
      _bindCropEvents = function() {
        $(__cropModal).find(__cancelCropButton).bind('click', function() {
          return $(__cropModal).modal('hide');
        });
        return $(__cropModal).find(__saveCropButton).bind('click', function() {
          return $(__cropModal).find(__cropForm).submit();
        });
      };
      _updateCropCoords = function(coords) {
        $(__cropModal).find('.x_d').val(coords.x);
        $(__cropModal).find('.y_d').val(coords.y);
        $(__cropModal).find('.w_sel').val(coords.w);
        return $(__cropModal).find('.h_sel').val(coords.h);
      };
      _showThumbnail = function(image) {
        var time;

        console.log(image);
        time = new Date().getTime();
        return $(__itemCurrent).find(__fileUploadThumbnail).attr('src', image + '?' + time);
      };
      confirmDelete = function(target) {
        var modal, url;

        url = target.attr('href');
        modal = $(Index.modals.confirm);
        $('#modalBody', modal).html('Deseja deletar o item?');
        $('#modalLabel', modal).html('Deletar');
        $(modal).modal();
        $(modal).on('hidden', function() {
          return $(this).remove('.modal');
        });
        return $(modal).find('.btn-confirm-modal').bind('click', function() {
          $(modal).modal('hide');
          return remove(url);
        });
      };
      remove = function(url) {
        return $.ajax({
          url: url,
          type: 'DELETE',
          dataType: 'json',
          beforeSend: function() {
            return Index.uiBlocker();
          }
        }).done(function(data) {
          var title;

          if (!(data instanceof Object)) {
            return false;
          }
          if (data.success === true) {
            title = 'Sucesso!';
          } else {
            title = false;
          }
          data.message = data.message === void 0 || data.message === '' ? 'Item removido com sucesso' : data.message;
          Index.modals.showAlert(data.message, title);
          if (data.success === true) {
            return setTimeout(function() {
              return window.location.href = document.URL;
            }, 1000);
          }
        }).always(function() {
          return Index.uiBlocker();
        });
      };
      bindEvents = function() {
        $(__addButton).bind('click', function(event) {
          event.preventDefault();
          return getForm($(this), 'add');
        });
        $(__editButton).live('click', function(event) {
          var id;

          event.preventDefault();
          id = $(this).attr('rel');
          return getForm($(this), 'edit');
        });
        $(__deleteButton).live('click', function(event) {
          event.preventDefault();
          return confirmDelete($(this));
        });
        $(__saveButton).live('click', function(event) {
          return $(__formModal).find(__formElement).submit();
        });
        return $(__fancyboxImage).fancybox();
      };
      return {
        init: function() {
          return bindEvents();
        }
      };
    })();
    return Admin;
  })(Index || {});
  return $(function() {
    return Index.Admin.manage.init();
  });
});
